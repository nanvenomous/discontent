package ui

import (
	"fmt"
	"reflect"

	"github.com/nanvenomous/discontent/models"
	"github.com/nanvenomous/discontent/reflection"
)

var (
	iconTypeMap = map[string]string{
		"string":   "ph-textbox",
		"ObjectID": "ph-key",
	}

	disabledTypeMap = map[string]bool{
		"ObjectID": true,
	}
)

templ SubmitEntityForm(entity any, entityType reflect.Type) {
	@card(cardProps{ID: "entityFormCard"}) {
		<form
			hx-post={ fmt.Sprintf("/api/entities/%s", models.GetCollectionNameFromStruct(entity)) }
			hx-target="#entityFormCard"
			hx-swap="outerHTML"
			hx-disabled-elt="find button"
			class="w-full flex flex-col items-end"
		>
			for i := 0; i < entityType.NumField(); i++ {
				@iconInput(iconInputProps{
					ID:          entityType.Field(i).Name,
					Label:       entityType.Field(i).Name,
					Placeholder: entityType.Field(i).Type.Name(),
					Icon:        iconTypeMap[entityType.Field(i).Type.Name()],
					ViewOnly:    disabledTypeMap[entityType.Field(i).Type.Name()],
					Name:        entityType.Field(i).Name,
					Value:       reflection.GetStringFromValue(entityType.Field(i), reflect.ValueOf(entity).Field(i)),
				})
				<br/>
			}
			@primaryIconButton(propsPrimaryIconButton{
				ID:    "submitEntityButton",
				Icon:  "ph-check-circle",
				Label: "Submit",
				Value: "",
			})
		</form>
	}
}
